version: '3.7'

services:
  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.prod.db
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: hypercorn princetonpy.asgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
    expose:
      - 8000
    env_file:
      - .env.prod.web
      - .env.prod.aws
    depends_on:
      - db
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8000"
    env_file:
      - .env.prod.nginx
    volumes:
      - static_volume:/var/www/princetonpy.org/staticfiles
    depends_on:
      - web
    command: [nginx-debug, '-g', 'daemon off;']
  nginx-proxy:
    container_name: nginx-proxy
    build:
      context: ./nginx-proxy
      dockerfile: Dockerfile
    restart: always
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - nginx

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
