###########
# BUILDER #
###########

# pull official base image
FROM python:3.9.2-slim-buster as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# lint
RUN /usr/local/bin/python -m pip install --upgrade pip
RUN pip install flake8
COPY . .
RUN flake8 --ignore=E501,F401 .

RUN apt-get update
RUN apt-get install -y build-essential
RUN apt-get install -y python3-dev
RUN apt-get install -y swig
RUN apt-get install -y libssl-dev
# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.9.2-slim-buster

# for nc
RUN apt-get update
RUN apt-get install -y netcat

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN groupadd -r -g 1001 app && useradd app --no-log-init -r -u 1001 -g 1001

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
ENV APP_PIP=$APP_HOME/pip
ENV PYTHONPATH="${PYTHONPATH}:$APP_PIP"
WORKDIR $APP_HOME
ENV PATH="${PATH}:$APP_PIP/bin"

COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN /usr/local/bin/python -m pip install --upgrade pip
RUN mkdir -p $APP_PIP
RUN pip install -t $APP_PIP --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN mkdir -p ./static
RUN chown -R 1001:1001 $APP_HOME

# change to the app user
USER 1001:1001

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
