"""
Django settings for princetonpy project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import environ
import os
from pathlib import Path

# Set the project base directory
from django.contrib.staticfiles.urls import staticfiles_urlpatterns

BASE_DIR = Path(__file__).resolve().parents[1]  # /princetonpy.org/app
REPO_DIR = BASE_DIR.parent  # /princetonpy.org

# Take environment variables from .env file
env = environ.Env()
use_file = env.bool("ENV_FILE")
if use_file and use_file != env.NOTSET:
    env_file = env.str("ENV_PATH", ".env")
    env.read_env(env_file)

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str("SECRET_KEY", default="testing")

DEBUG = env.bool("DEBUG", default=False)

LOCAL_ENV = env.bool("LOCAL_ENV", default=False)

# 'DJANGO_ALLOWED_HOSTS' should be a single string of hosts with a space between each.
# For example: 'DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]'
ALLOWED_HOSTS = env.str("DJANGO_ALLOWED_HOSTS", "").split(" ")

BACKUP_PATH = env.str("BACKUP_PATH", None)

# Application definition

INSTALLED_APPS = [
    "homepage",
    "meetings",
    "customadmin",
    "emails",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "django_ses",
    "tinymce",
    "sorl.thumbnail",
    "newsletter",
]

SITE_ID = 3

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "princetonpy.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "princetonpy", "templates")],
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
            "loaders": [
                (
                    "django.template.loaders.cached.Loader",
                    [
                        "django.template.loaders.filesystem.Loader",
                        "django.template.loaders.app_directories.Loader",
                    ],
                ),
            ],
        },
    },
]

WSGI_APPLICATION = "princetonpy.wsgi.application"

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3"),
        "NAME": os.environ.get("SQL_DATABASE", os.path.join(BASE_DIR, "db.sqlite3")),
        "USER": os.environ.get("SQL_USER", "user"),
        "PASSWORD": os.environ.get("SQL_PASSWORD", "password"),
        "HOST": os.environ.get("SQL_HOST", "localhost"),
        "PORT": os.environ.get("SQL_PORT", "5432"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = "/static/"

DEFAULT_STATIC_ROOT = Path(os.path.join(REPO_DIR, "static"))
STATIC_ROOT = env.path("STATIC_ROOT", DEFAULT_STATIC_ROOT)
STATICFILES_DIRS = []
# STATICFILES_DIRS.append("")
# if LOCAL_ENV:
#     STATICFILES_DIRS.append("/usr/src/app/pages")

# SSL setting
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# email settings
EMAIL_BACKEND = "django_ses.SESBackend"

# Additionally, if you are not using the default AWS region of us-east-1,
# you need to specify a region, like so:
# AWS_SES_REGION_NAME = 'us-west-2'
# AWS_SES_REGION_ENDPOINT = 'email.us-west-2.amazonaws.com'

AWS_SES_CONFIGURATION_SET = "princetonpy-config-set"

NEWSLETTER_RICHTEXT_WIDGET = "tinymce.widgets.TinyMCE"

# Amount of seconds to wait between each email. Here 100ms is used.
NEWSLETTER_EMAIL_DELAY = 0.1

# Amount of seconds to wait between each batch. Here one minute is used.
NEWSLETTER_BATCH_DELAY = 60

# Number of emails in one batch
NEWSLETTER_BATCH_SIZE = 100

SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
    }
}

CRONTAB_COMMAND_PREFIX = env.str("CRONTAB_COMMAND_PREFIX", "")

CRONJOBS = [
    ("0 0 * * *", "princetonpy.cron.backup.save_users"),
    ("*/5 * * * *", "django.core.management.call_command", ["submit_newsletter"]),
]
